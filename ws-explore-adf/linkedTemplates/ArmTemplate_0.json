{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ws-explore-adf"
		},
		"ls_adls2_explorestorage_poc_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls2_explorestorage_poc'"
		},
		"ls_az_sql_sample_db_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_az_sql_sample_db'"
		},
		"ls_adls2_explorestorage_poc_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://explorestorage1710.dfs.core.windows.net/"
		},
		"ls_az_sql_sample_db_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "explore-sql-server.database.windows.net"
		},
		"ls_az_sql_sample_db_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sample"
		},
		"ls_az_sql_sample_db_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "azexplore"
		},
		"ls_webApi_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().baseUrl}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls2_explorestorage_poc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls2_explorestorage_poc_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls2_explorestorage_poc_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_az_sql_sample_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_az_sql_sample_db_properties_typeProperties_server')]",
					"database": "[parameters('ls_az_sql_sample_db_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_az_sql_sample_db_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_az_sql_sample_db_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_webApi')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"baseUrl": {
						"type": "String",
						"defaultValue": "https://reqres.in/api/users"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_webApi_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/00')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "total_page",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('total_page'),5)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "page_count_inc",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "page_count_incr",
										"value": {
											"value": "@add(variables('page_count_incr'),1)",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "total_page",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "total_page",
							"value": 5
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"total_page": {
						"type": "Integer"
					},
					"page_count_incr": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "activities"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls2_poc_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ds for csv passing parameter",
				"linkedServiceName": {
					"referenceName": "ls_adls2_explorestorage_poc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "poc"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "poc/inbound/nycRaw",
						"fileSystem": "explore-adls"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date_key",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "day",
						"type": "String"
					},
					{
						"name": "day_name",
						"type": "String"
					},
					{
						"name": "day_of_year",
						"type": "String"
					},
					{
						"name": "week_of_month",
						"type": "String"
					},
					{
						"name": "week_of_year",
						"type": "String"
					},
					{
						"name": "month_name",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls2_explorestorage_poc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls2_poc_csv_param')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ds for csv passing parameter",
				"linkedServiceName": {
					"referenceName": "ls_adls2_explorestorage_poc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"root_path": {
						"type": "string"
					},
					"directory_path": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "poc"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory_path",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().root_path",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date_key",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "day",
						"type": "String"
					},
					{
						"name": "day_name",
						"type": "String"
					},
					{
						"name": "day_of_year",
						"type": "String"
					},
					{
						"name": "week_of_month",
						"type": "String"
					},
					{
						"name": "week_of_year",
						"type": "String"
					},
					{
						"name": "month_name",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls2_explorestorage_poc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls2_poc_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls2_explorestorage_poc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"root_path": {
						"type": "String",
						"defaultValue": "explore-adls"
					},
					"directory_path_param": {
						"type": "String",
						"defaultValue": "poc/output/nycRaw"
					},
					"file_name_param": {
						"type": "String",
						"defaultValue": "API_Response.json"
					}
				},
				"folder": {
					"name": "poc"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name_param",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory_path_param",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().root_path",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls2_explorestorage_poc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_az_sql_poc_sample_db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "sample db dataset without params",
				"linkedServiceName": {
					"referenceName": "ls_az_sql_sample_db",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "poc"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					}
				],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_az_sql_sample_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_az_sql_poc_sample_db_param')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_az_sql_sample_db",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "poc"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_az_sql_sample_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_webApi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_webApi",
					"type": "LinkedServiceReference",
					"parameters": {
						"baseUrl": "https://reqres.in/api/users"
					}
				},
				"parameters": {
					"relativeUrl": {
						"type": "String",
						"defaultValue": "https://reqres.in/api/users?page=1"
					}
				},
				"folder": {
					"name": "poc"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().relativeUrl",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_webApi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connect to sample db",
				"activities": [
					{
						"name": "sys table info",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from sys.tables",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_az_sql_poc_sample_db",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "activities"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_az_sql_poc_sample_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_web_api')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get API Data",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@pipeline().parameters.base_url_param",
								"type": "Expression"
							}
						}
					},
					{
						"name": "copy json to file",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FileNameFormat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_webApi",
								"type": "DatasetReference",
								"parameters": {
									"relativeUrl": "https://reqres.in/api/users?page=1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls2_poc_json",
								"type": "DatasetReference",
								"parameters": {
									"root_path": {
										"value": "@pipeline().parameters.root_path_param",
										"type": "Expression"
									},
									"directory_path_param": {
										"value": "@pipeline().parameters.directory_path_param",
										"type": "Expression"
									},
									"file_name_param": {
										"value": "@variables('fileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "FileNameFormat",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "total_pages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "fileName",
							"value": {
								"value": "@concat('User_Reponse','_',formatDateTime(utcnow(), 'MMddyyyyHHmmss'),'.json')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "total_pages",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get API Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_total_pages",
							"value": {
								"value": "@activity('Get API Data').output.total_pages",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"base_url_param": {
						"type": "string",
						"defaultValue": "https://reqres.in/api/users"
					},
					"relative_url_param": {
						"type": "string",
						"defaultValue": "https://reqres.in/api/users?page=1"
					},
					"root_path_param": {
						"type": "string",
						"defaultValue": "explore-adls"
					},
					"directory_path_param": {
						"type": "string",
						"defaultValue": "poc/inbound/nycRaw"
					}
				},
				"variables": {
					"fileName": {
						"type": "String"
					},
					"var_total_pages": {
						"type": "Integer"
					},
					"itemNo": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "poc"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_webApi')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls2_poc_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/02_get_metadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "get  metadat info",
				"activities": [
					{
						"name": "get inbound raw content",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adls2_poc_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "iterate over files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "filter_files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('filter_files').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "formet file name",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "file_name",
										"value": {
											"value": "@concat(split(item().name,'.')[0],'_',formatDateTime(utcnow(), 'MMddyyyyHHmmss'),'.',split(item().name,'.')[1])",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy file to outbound",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "formet file name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_adls2_poc_csv_param",
											"type": "DatasetReference",
											"parameters": {
												"root_path": "explore-adls",
												"directory_path": "poc/inbound/nycRaw",
												"file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls2_poc_csv_param",
											"type": "DatasetReference",
											"parameters": {
												"root_path": "explore-adls",
												"directory_path": "poc/outbound/nycRaw",
												"file_name": {
													"value": "@variables('file_name')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "filter_files",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "get inbound raw content",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get inbound raw content').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type,'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"file_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "activities"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls2_poc_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls2_poc_csv_param')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/03_until')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "process file if exists",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('IsFileExists'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata1",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adls2_poc_csv_param",
											"type": "DatasetReference",
											"parameters": {
												"root_path": {
													"value": "@pipeline().parameters.root_path_param",
													"type": "Expression"
												},
												"directory_path": {
													"value": "@pipeline().parameters.directory_path_param",
													"type": "Expression"
												},
												"file_name": {
													"value": "@pipeline().parameters.file_name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "check for file exists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('Get Metadata1').output.exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait  for 1 min",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 60
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "isFileExists",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "IsFileExists",
													"value": true
												}
											}
										]
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "copy file to dest",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "process file if exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_adls2_poc_csv_param",
								"type": "DatasetReference",
								"parameters": {
									"root_path": {
										"value": "@pipeline().parameters.root_path_param",
										"type": "Expression"
									},
									"directory_path": {
										"value": "@pipeline().parameters.directory_path_param",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.file_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls2_poc_csv_param",
								"type": "DatasetReference",
								"parameters": {
									"root_path": {
										"value": "@pipeline().parameters.root_path_dest_param",
										"type": "Expression"
									},
									"directory_path": {
										"value": "@pipeline().parameters.directory_path_dest_param",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.file_name_dest_param",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"root_path_param": {
						"type": "string",
						"defaultValue": "explore-adls"
					},
					"directory_path_param": {
						"type": "string",
						"defaultValue": "poc/inbound/nycRaw"
					},
					"file_name": {
						"type": "string",
						"defaultValue": "calendar4.csv"
					},
					"root_path_dest_param": {
						"type": "string",
						"defaultValue": "explore-adls"
					},
					"directory_path_dest_param": {
						"type": "string",
						"defaultValue": "poc/output/nycRaw"
					},
					"file_name_dest_param": {
						"type": "string",
						"defaultValue": "calendar4.csv"
					}
				},
				"variables": {
					"IsFileExists": {
						"type": "Boolean",
						"defaultValue": false
					},
					"total_page": {
						"type": "Integer"
					},
					"page_count": {
						"type": "Integer"
					},
					"page_count_incr": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "activities"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls2_poc_csv_param')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/04_Web')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get API Data",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@pipeline().parameters.base_url_param",
								"type": "Expression"
							}
						}
					},
					{
						"name": "copy json to file",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "FileNameFormat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_webApi",
								"type": "DatasetReference",
								"parameters": {
									"relativeUrl": "https://reqres.in/api/users?page=1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls2_poc_json",
								"type": "DatasetReference",
								"parameters": {
									"root_path": {
										"value": "@pipeline().parameters.root_path_param",
										"type": "Expression"
									},
									"directory_path_param": {
										"value": "@pipeline().parameters.directory_path_param",
										"type": "Expression"
									},
									"file_name_param": {
										"value": "@variables('fileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "FileNameFormat",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "fileName",
							"value": {
								"value": "@concat('User_Reponse','_',formatDateTime(utcnow(), 'MMddyyyyHHmmss'),'.json')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "total_pages",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get API Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_total_pages",
							"value": {
								"value": "@activity('Get API Data').output.total_pages",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"base_url_param": {
						"type": "string",
						"defaultValue": "https://reqres.in/api/users"
					},
					"relative_url_param": {
						"type": "string",
						"defaultValue": "https://reqres.in/api/users?page=1"
					},
					"root_path_param": {
						"type": "string",
						"defaultValue": "explore-adls"
					},
					"directory_path_param": {
						"type": "string",
						"defaultValue": "poc/inbound/nycRaw"
					}
				},
				"variables": {
					"fileName": {
						"type": "String"
					},
					"var_total_pages": {
						"type": "Integer"
					},
					"itemNo": {
						"type": "Integer"
					},
					"total_page": {
						"type": "Integer"
					},
					"page_count": {
						"type": "Integer"
					},
					"page_count_incr": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "activities"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_webApi')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls2_poc_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/02_copy_last_2_days_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get last two days files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adls2_poc_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"modifiedDatetimeStart": {
									"value": "@adddays(utcNow(),-1)",
									"type": "Expression"
								},
								"modifiedDatetimeEnd": {
									"value": "@utcNow()",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "iterate over file",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get last two days files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get last two days files').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy file",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_adls2_poc_csv_param",
											"type": "DatasetReference",
											"parameters": {
												"root_path": {
													"value": "@pipeline().parameters.inbound_root_path_param",
													"type": "Expression"
												},
												"directory_path": {
													"value": "@pipeline().parameters.inbound_directory_path_param",
													"type": "Expression"
												},
												"file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls2_poc_csv_param",
											"type": "DatasetReference",
											"parameters": {
												"root_path": {
													"value": "@pipeline().parameters.outbound_root_path_param",
													"type": "Expression"
												},
												"directory_path": {
													"value": "@pipeline().parameters.outbound_directory_path_param",
													"type": "Expression"
												},
												"file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"no_of_days_param": {
						"type": "int",
						"defaultValue": 1
					},
					"inbound_root_path_param": {
						"type": "string",
						"defaultValue": "explore-adls"
					},
					"inbound_directory_path_param": {
						"type": "string",
						"defaultValue": "poc/inbound/nycRaw"
					},
					"outbound_root_path_param": {
						"type": "string",
						"defaultValue": "explore-adls"
					},
					"outbound_directory_path_param": {
						"type": "string",
						"defaultValue": "poc/output/nycRaw"
					}
				},
				"folder": {
					"name": "poc"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls2_poc_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls2_poc_csv_param')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_master_web')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "web api master",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01_web_api",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"base_url_param": "https://reqres.in/api/users",
								"relative_url_param": "https://reqres.in/api/users?page=1",
								"root_path_param": "explore-adls",
								"directory_path_param": "poc/inbound/nycRaw"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "poc"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/01_web_api')]"
			]
		}
	]
}